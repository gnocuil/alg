%class-name SIPParser
%scanner SIPScanner.h
%scanner-class-name SIPScanner
%scanner-token-function d_scanner.lex()
%baseclass-preinclude tokentype.h

%stype TokenType
%token METHOD TEXT CRLF HEADER_IDENT HEADER_VALUE CHAR IP6ADDR HEADER_IDENT_VIA HEADER_IDENT_CONTACT CHAR_c CHAR_m
%%

sipmessage: requestline headers CRLF sdp
;
requestline: METHOD TEXT TEXT CRLF
;
headers: headers header
    | header
;
header: HEADER_IDENT ':' HEADER_VALUE CRLF {
        std::cout<<"header: [" << $1 << "]='" << $3 << "'\n";
    }
    | HEADER_IDENT_VIA ':' TEXT IP6ADDR TEXT trailing CRLF {
        std::cout<<"VIA:" << $4 << " " << $5.Int() << std::endl;
    }
    | HEADER_IDENT_CONTACT ':' TEXT ':' TEXT '@' IP6ADDR ':' TEXT CRLF {
        std::cout<<"CONTACT:" << $7 << " " << $9.Int() << std::endl;
    }
    | error
;
trailing: trailing TEXT {$$=$1+" "+$2;}
    | TEXT {$$=$1;}
;
sdp: sdp sdp_line
    | sdp_line
;
sdp_line: CHAR '=' trailing CRLF {
        std::cout<< "char[" << $1 << "]=" << $3 << std::endl;
    }
    | CHAR_c '=' TEXT TEXT TEXT CRLF {
        std::cout<< "char[" << $1 << "]=ip:" << $5 << std::endl;
    }
    | CHAR_m '=' TEXT TEXT trailing CRLF {
        std::cout<< "char[" << $1 << "]=port:" << $4 << std::endl;
    }
;
